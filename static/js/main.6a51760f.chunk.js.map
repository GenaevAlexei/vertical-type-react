{"version":3,"sources":["components/activateButton.js","components/lettersList.js","App.js","reportWebVitals.js","index.js"],"names":["ActivateButton","props","useState","activeClass","setActive","className","type","id","onKeyDown","onFocus","onBlur","htmlFor","LettersList","letters","map","item","index","App","setLetters","event","letter","key","test","length","concat","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAuBeA,MArBf,SAAwBC,GAAO,IAAD,EACGC,mBAAS,SADZ,mBACvBC,EADuB,KACVC,EADU,KAW5B,OAAO,sBAAKC,UAAU,WAAf,UACG,uBAAOC,KAAK,OAAOD,UAAU,QACtBE,GAAG,eACHC,UAAWP,EAAMO,UACjBC,QAZjB,WACEL,EAAUD,EAAc,SAYTO,OATjB,WACEN,EAAUD,EAAc,YAShB,uBAAOQ,QAAQ,eAAeN,UAAWF,EAAzC,oCCDGS,MAXf,SAAqBX,GACnB,OACE,oBAAII,UAAU,OAAd,SACMJ,EAAMY,QAAQC,KAAI,SAACC,EAAMC,GACzB,OAAO,oBAAgBX,UAAU,OAA1B,SAAkCU,GAAzBC,SCgBXC,MAtBf,WAAgB,IAAD,EACef,mBAAS,IADxB,mBACRW,EADQ,KACCK,EADD,KAcb,OACI,sBAAKb,UAAU,UAAf,UACE,cAAC,EAAD,CAAaQ,QAASA,IACtB,cAAC,EAAD,CAAgBL,UAdH,SAASW,GAC1B,IAAIC,EAASD,EAAME,KAGS,IAFf,kDAEFC,KAAKF,IAAsC,IAAlBA,EAAOG,QACvCL,EAAWL,EAAQW,OAAO,CAACJ,KAG/BK,QAAQC,IAAIb,UCJDc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a51760f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction ActivateButton(props){\r\n  let [activeClass, setActive] = useState('black');\r\n\r\n  function activeColor(){\r\n    setActive(activeClass = 'blue')\r\n  }\r\n\r\n  function disactiveColor(){\r\n    setActive(activeClass = 'black')\r\n  }\r\n\r\n  return <div className=\"activate\">\r\n            <input type=\"text\" className=\"input\"\r\n                   id=\"inputLetters\"\r\n                   onKeyDown={props.onKeyDown}\r\n                   onFocus={activeColor}\r\n                   onBlur={disactiveColor}/>\r\n            <label htmlFor=\"inputLetters\" className={activeClass}>Click here to type</label>\r\n         </div>\r\n  };\r\n\r\nexport default ActivateButton;\r\n","import React from 'react';\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n} from 'react-transition-group';\r\n\r\n\r\nfunction LettersList(props){\r\n  return(\r\n    <ul className=\"list\">\r\n        { props.letters.map((item, index) => {\r\n          return <li key={index} className=\"item\">{item}</li>\r\n          })\r\n        }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default LettersList\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport ActivateButton from './components/activateButton';\nimport LettersList from './components/lettersList';\n\nfunction App() {\n  let [letters, setLetters] = useState([]);\n\n  const keyHandler = function(event){\n    let letter = event.key;\n    let regexp = /[a-zA-Zа-яА-ЯёЁ]/i;\n\n    if (regexp.test(letter) === true && letter.length === 1) {\n        setLetters(letters.concat([letter]));\n    }\n\n    console.log(letters)\n  }\n\n  return (\n      <div className=\"wrapper\">\n        <LettersList letters={letters}/>\n        <ActivateButton onKeyDown={keyHandler} />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}